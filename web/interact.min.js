// Custom interact.js implementation for FRP_MDTUI
(function() {
    'use strict';
    
    // Simple interact object
    window.interact = function(selector) {
        return new InteractElement(selector);
    };
    
    function InteractElement(selector) {
        this.element = typeof selector === 'string' ? document.querySelector(selector) : selector;
        this.draggable = function(options) {
            return this.draggableOptions = options, this;
        };
        this.resizable = function(options) {
            return this.resizableOptions = options, this;
        };
        this.on = function(event, callback) {
            if (event === 'move') {
                this.moveCallback = callback;
            } else if (event === 'resizemove') {
                this.resizeCallback = callback;
            }
            return this;
        };
        this.unset = function() {
            // Clean up event listeners if needed
            return this;
        };
    }
    
    // Initialize drag and resize functionality
    function initInteract() {
        const container = document.querySelector('.mdt-container');
        if (!container) return;
        
        let isDragging = false;
        let isResizing = false;
        let startX, startY, startLeft, startTop, startWidth, startHeight;
        
        // Make container draggable
        container.addEventListener('mousedown', function(e) {
            if (!container.classList.contains('interactive')) return;
            
            if (e.target.classList.contains('mdt-resize-handle')) {
                // Start resizing
                isResizing = true;
                startX = e.clientX;
                startY = e.clientY;
                startWidth = container.offsetWidth;
                startHeight = container.offsetHeight;
            } else {
                // Start dragging
                isDragging = true;
                startX = e.clientX;
                startY = e.clientY;
                startLeft = container.offsetLeft;
                startTop = container.offsetTop;
            }
        });
        
        // Handle mouse move
        document.addEventListener('mousemove', function(e) {
            if (!container.classList.contains('interactive')) return;
            
            if (isDragging) {
                const deltaX = e.clientX - startX;
                const deltaY = e.clientY - startY;
                
                container.style.left = (startLeft + deltaX) + 'px';
                container.style.top = (startTop + deltaY) + 'px';
            } else if (isResizing) {
                const deltaX = e.clientX - startX;
                const deltaY = e.clientY - startY;
                
                container.style.width = (startWidth + deltaX) + 'px';
                container.style.height = (startHeight + deltaY) + 'px';
            }
        });
        
        // Handle mouse up
        document.addEventListener('mouseup', function() {
            if (isDragging || isResizing) {
                isDragging = false;
                isResizing = false;
                
                // Save position and size
                if (window.parent && window.parent.postMessage) {
                    window.parent.postMessage({
                        action: 'saveRect',
                        rect: {
                            left: container.offsetLeft,
                            top: container.offsetTop,
                            width: container.offsetWidth,
                            height: container.offsetHeight
                        }
                    }, '*');
                }
            }
        });
    }
    
    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initInteract);
    } else {
        initInteract();
    }
    
    // Export for global use
    window.interact = interact;
})();
